p + p,
p + ul {
  margin-top: 1rem;
}

.banner {
  display: block;
}

.banner__image {
  position: relative;
}
.banner__image:after {
  position: absolute;
  content: "";
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(89, 115, 70, 0.2);
}
@media (min-width: 768px) {
  .banner__image:after {
    background-color: rgba(0, 0, 0, 0.2);
  }
}
@media (min-width: 768px) {
  .banner__image:hover:after {
    background-color: rgba(89, 115, 70, 0.2);
  }
}
.banner__image img {
  border-radius: 0;
  display: none;
}
@media (min-width: 768px) {
  .banner__image img {
    display: block;
  }
}

.banner__text {
  width: 100%;
  text-align: center;
  margin-top: 2rem;
  position: static;
}
@media (min-width: 768px) {
  .banner__text {
    position: absolute;
    top: 0;
    z-index: 1;
  }
}
@media (min-width: 1024px) {
  .banner__text {
    margin-top: 3rem;
  }
}
.banner__text h1 {
  padding: 1rem;
}
@media (min-width: 768px) {
  .banner__text h1 {
    color: white;
  }
}

.banner__text--wplogo {
  max-width: 500px;
  margin: auto;
}

.service-icons-block {
  margin: 4rem 0;
}
.service-icons-block h3, .service-icons-block p {
  padding-top: 0;
  -webkit-margin-before: 1rem;
          margin-block-start: 1rem;
}

.testimonials {
  margin: 2rem 0;
}
.testimonials .flexslider li {
  margin-bottom: 2rem;
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
